    private LinkedList<FlowGraphNode> getInitialWorkList()
    {
        List<FlowGraphNode> wl        = new LinkedList<FlowGraphNode>();
        BitSet              visited   = new BitSet(1+_cfg.getMaxNodeID());
        List<BasicBlock>    readyList = new LinkedList<BasicBlock>();
        BasicBlock          startNode = _direction == FORWARD ? _cfg.getRoot() : _cfg.getExit();
        readyList.add(startNode);
        while (!readyList.isEmpty()) {
            BasicBlock b = readyList.removeFirst();
            wl.add(b);
            visited.set(b.getID());

            // Process dependents of 'b'
            Set<CFG_Edge> deps = _direction == FORWARD ? outgoingEdgesOf(b) : incomingEdgesOf(b);
            for (CFG_Edge e: deps) {
            }
        }

        return wl;
    }
