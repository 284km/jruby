fails:Array#pack with format 'D' ignores whitespace in the format string
fails:Array#pack with format 'D' calls #to_str to coerce the directives string
fails:Array#pack with format 'D' taints the output string if the format string is tainted
fails:Array#pack with format 'D' raises an ArgumentError if there are fewer elements than the format requires
fails:Array#pack with format 'D' raises ArgumentError when the format modifier is '_'
fails:Array#pack with format 'D' raises ArgumentError when the format modifier is '!'
fails:Array#pack with format 'D' returns an empty String if count is zero
fails:Array#pack with format 'D' raises a TypeError when passed true
fails:Array#pack with format 'D' raises a TypeError when passed false
fails:Array#pack with format 'D' returns an ASCII-8BIT string
fails:Array#pack with format 'D' raises a TypeError if a String does not represent a floating point number
fails:Array#pack with format 'D' raises a TypeError when the object does not respond to #to_f
fails:Array#pack with format 'D' encodes a positive Float
fails:Array#pack with format 'D' encodes a negative Float
fails:Array#pack with format 'D' converts an Integer to a Float
fails:Array#pack with format 'D' raises a TypeError if passed a String representation of a floating point number
fails:Array#pack with format 'D' encodes the number of array elements specified by the count modifier
fails:Array#pack with format 'D' encodes all remaining elements when passed the '*' modifier
fails:Array#pack with format 'D' ignores NULL bytes between directives
fails:Array#pack with format 'D' ignores spaces between directives
fails:Array#pack with format 'D' encodes positive Infinity
fails:Array#pack with format 'D' encodes negative Infinity
fails:Array#pack with format 'D' encodes a positive Float outside the range of a single precision float
fails:Array#pack with format 'D' encodes a negative Float outside the range of a single precision float
fails:Array#pack with format 'd' ignores whitespace in the format string
fails:Array#pack with format 'd' calls #to_str to coerce the directives string
fails:Array#pack with format 'd' taints the output string if the format string is tainted
fails:Array#pack with format 'd' raises an ArgumentError if there are fewer elements than the format requires
fails:Array#pack with format 'd' raises ArgumentError when the format modifier is '_'
fails:Array#pack with format 'd' raises ArgumentError when the format modifier is '!'
fails:Array#pack with format 'd' returns an empty String if count is zero
fails:Array#pack with format 'd' raises a TypeError when passed true
fails:Array#pack with format 'd' raises a TypeError when passed false
fails:Array#pack with format 'd' returns an ASCII-8BIT string
fails:Array#pack with format 'd' raises a TypeError if a String does not represent a floating point number
fails:Array#pack with format 'd' raises a TypeError when the object does not respond to #to_f
fails:Array#pack with format 'd' encodes a positive Float
fails:Array#pack with format 'd' encodes a negative Float
fails:Array#pack with format 'd' converts an Integer to a Float
fails:Array#pack with format 'd' raises a TypeError if passed a String representation of a floating point number
fails:Array#pack with format 'd' encodes the number of array elements specified by the count modifier
fails:Array#pack with format 'd' encodes all remaining elements when passed the '*' modifier
fails:Array#pack with format 'd' ignores NULL bytes between directives
fails:Array#pack with format 'd' ignores spaces between directives
fails:Array#pack with format 'd' encodes positive Infinity
fails:Array#pack with format 'd' encodes negative Infinity
fails:Array#pack with format 'd' encodes a positive Float outside the range of a single precision float
fails:Array#pack with format 'd' encodes a negative Float outside the range of a single precision float
fails:Array#pack with format 'D' raises a TypeError when passed nil
fails:Array#pack with format 'D' raises a TypeError when passed an Integer
fails:Array#pack with format 'D' encodes NaN
fails:Array#pack with format 'd' raises a TypeError when passed nil
fails:Array#pack with format 'd' raises a TypeError when passed an Integer
fails:Array#pack with format 'd' encodes NaN
