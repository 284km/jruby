fails:String#% raises an ArgumentError for unused arguments when $DEBUG is true
fails:String#% supports float formats using %g
fails:String#% supports float formats using %G
fails:String#% supports octal formats using %o for negative numbers
fails:String#% raises an ArgumentError for huge precisions for %s
fails:String#% supports hex formats using %x for negative numbers
fails:String#% supports hex formats using %X for negative numbers
fails:String#% behaves as if calling Kernel#Float for %e arguments, when the passed argument does not respond to #to_ary
fails:String#% behaves as if calling Kernel#Float for %e arguments, when the passed argument is hexadecimal string
fails:String#% behaves as if calling Kernel#Float for %E arguments, when the passed argument does not respond to #to_ary
fails:String#% behaves as if calling Kernel#Float for %E arguments, when the passed argument is hexadecimal string
fails:String#% behaves as if calling Kernel#Float for %f arguments, when the passed argument does not respond to #to_ary
fails:String#% behaves as if calling Kernel#Float for %f arguments, when the passed argument is hexadecimal string
fails:String#% behaves as if calling Kernel#Float for %g arguments, when the passed argument does not respond to #to_ary
fails:String#% behaves as if calling Kernel#Float for %g arguments, when the passed argument is hexadecimal string
fails:String#% behaves as if calling Kernel#Float for %G arguments, when the passed argument does not respond to #to_ary
fails:String#% behaves as if calling Kernel#Float for %G arguments, when the passed argument is hexadecimal string
fails:String#% when format string contains %<> formats should raise ArgumentError if no hash given
