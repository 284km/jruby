fails:Module#autoload loads the registered constant when it is opened as a class
fails:Module#autoload loads the registered constant when it is opened as a module
fails:Module#autoload does not load the file if the file is manually required
fails:Module#autoload ignores the autoload request if the file is already loaded
fails:Module#autoload does not remove the constant from the constant table if the loaded files does not define it
fails:Module#autoload loads the file when opening a module that is the autoloaded constant
fails:Module#autoload looks up the constant when in a meta class scope
fails:Module#autoload does NOT raise a NameError when the autoload file did not define the constant and a module is opened with the same name
fails:Module#autoload calls #to_path on non-string filenames
fails:Module#autoload calls #to_path on non-String filename arguments
fails:Module#autoload (concurrently) blocks a second thread while a first is doing the autoload
fails:Module#autoload (concurrently) blocks others threads while doing an autoload
fails:Module#autoload loads the registered constant into a dynamically created class
fails:Module#autoload loads the registered constant into a dynamically created module
fails:Module#autoload loads the registered constant when it is inherited from
fails:Module#autoload loads the registered constant when it is included
fails:Module#autoload runs for an exception condition class and doesn't trample the exception
fails:Module#autoload loads the file that defines subclass XX::YY < YY and YY is a top level constant
fails:Module#autoload shares the autoload request across dup'ed copies of modules
fails:Module#autoload when changing $LOAD_PATH does not reload a file due to a different load path
