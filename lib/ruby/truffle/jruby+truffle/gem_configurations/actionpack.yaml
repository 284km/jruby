:setup:
  :global:
    :graal_path: '../../graalvm-jdk1.8.0/bin/java'
  :file:
    bundler.rb: "module Bundler; def self.setup; end; end"
    stubs.rb: |
              require 'action_view'
              require 'action_view/helpers'
              require 'action_view/helpers/sanitize_helper'

              module ActionView
                module Helpers
                  module SanitizeHelper
                    def sanitize(html, options = {})
                      html
                    end

                    def sanitize_css(style)
                      style
                    end

                    def strip_tags(html)
                      html
                    end

                    def strip_links(html)
                      html
                    end

                    module ClassMethods #:nodoc:
                      attr_writer :full_sanitizer, :link_sanitizer, :white_list_sanitizer

                      def sanitized_allowed_tags
                        []
                      end

                      def sanitized_allowed_attributes
                        []
                      end
                    end

                  end
                end
              end
    rails-html-sanitizer.rb: "puts 'HTML sanitization stubbed'"
    nokogiri.rb: "puts 'nokogiri stubbed'"
    excluded-tests.rb:  |
                        blocking = { "ActionDispatch::Journey::GTG::TestGeneralizedTable" => ["test_to_svg"] }

                        failures = { "ActionPackAssertionsControllerTest"                                =>
                                         ["test_render_file_absolute_path",
                                          "test_render_file_relative_path"],
                                     "AssertTemplateTest"                                                =>
                                         ["test_assert_template_reset_between_requests",
                                          "test_fails_with_repeated_name_in_path",
                                          "test_file_with_absolute_path_success",
                                          "test_file_with_relative_path_success",
                                          "test_with_file_failure"],
                                     "FunctionalFragmentCachingTest"                                     =>
                                         ["test_fragment_caching",
                                          "test_fragment_caching_with_variant"],
                                     "IntegrationProcessTest"                                            =>
                                         ["test_cookie_persist_to_next_request",
                                          "test_https_and_port_via_host_and_https!",
                                          "test_https_and_port_via_process",
                                          "test_port_via_host!",
                                          "test_port_via_process",
                                          "test_cookie_persist_to_next_request_on_another_domain",
                                          "test_get",
                                          "test_get_with_parameters",
                                          "test_get_with_query_string",
                                          "test_get_xml_rss_atom",
                                          "test_head",
                                          "test_post",
                                          "test_redirect",
                                          "test_request_with_bad_format",
                                          "test_respect_removal_of_default_headers_by_a_controller_action",
                                          "test_response_cookies_are_added_to_the_cookie_jar_for_the_next_request",
                                          "test_xml_http_request_get"],
                                     "ApplicationIntegrationTest"                                        =>
                                         ["test_missing_route_helper_after_controller_access",
                                          "test_missing_route_helper_before_controller_access"],
                                     "ActionController::SSETest"                                         =>
                                         ["test_basic_sse",
                                          "test_sse_with_event_name",
                                          "test_sse_with_id",
                                          "test_sse_with_multiple_line_message",
                                          "test_sse_with_retry"],
                                     "ActionController::LiveStreamTest"                                  =>
                                         ["test_abort_with_full_buffer",
                                          "test_async_stream",
                                          "test_bad_request_in_controller_before_streaming",
                                          "test_exception_callback_when_committed",
                                          "test_exception_handling_html",
                                          "test_exception_handling_plain_text",
                                          "test_exception_in_controller_before_streaming",
                                          "test_exceptions_raised_handling_exceptions_and_committed",
                                          "test_ignore_client_disconnect",
                                          "test_live_stream_default_header",
                                          "test_render_text",
                                          "test_set_cookie",
                                          "test_stale_with_etag",
                                          "test_stale_without_etag",
                                          "test_thread_locals_get_copied",
                                          "test_write_to_stream"],
                                     "ExpiresInRenderTest"                                               =>
                                         ["test_dynamic_render_with_file",
                                          "test_permitted_dynamic_render_file_hash"],
                                     "RequestForgeryProtectionControllerUsingResetSessionTest"           =>
                                         ["test_should_emit_a_csrf-param_meta_tag_and_a_csrf-token_meta_tag",
                                          "test_should_render_button_to_with_token_tag",
                                          "test_should_render_form_with_token_tag",
                                          "test_should_render_form_with_token_tag_if_remote_and_authenticity_token_requested",
                                          "test_should_render_form_with_token_tag_if_remote_and_external_authenticity_token_requested",
                                          "test_should_render_form_with_token_tag_if_remote_and_external_authenticity_token_requested_and_embedding_is_on",
                                          "test_should_render_form_with_token_tag_with_authenticity_token_requested"],
                                     "RequestForgeryProtectionControllerUsingExceptionTest"              =>
                                         ["test_should_render_button_to_with_token_tag",
                                          "test_should_render_form_with_token_tag",
                                          "test_should_render_form_with_token_tag_if_remote_and_authenticity_token_requested",
                                          "test_should_render_form_with_token_tag_if_remote_and_external_authenticity_token_requested",
                                          "test_should_render_form_with_token_tag_if_remote_and_external_authenticity_token_requested_and_embedding_is_on",
                                          "test_should_render_form_with_token_tag_with_authenticity_token_requested"],
                                     "FreeCookieControllerTest"                                          =>
                                         ["test_should_not_render_button_to_with_token_tag",
                                          "test_should_not_render_form_with_token_tag"],
                                     "RescueControllerTest"                                              =>
                                         ["test_block_rescue_handler_with_argument",
                                          "test_block_rescue_handler_with_argument_as_string",
                                          "test_proc_rescue_handle_with_argument",
                                          "test_proc_rescue_handle_with_argument_as_string"],
                                     "SendFileTest"                                                      =>
                                         ["test_send_file_with_action_controller_live"],
                                     "TestCaseTest"                                                      =>
                                         ["test_assert_select_with_body",
                                          "test_assert_select_without_body",
                                          "test_should_not_impose_childless_html_tags_in_xml"],
                                     "MimeControllerLayoutsTest"                                         =>
                                         ["test_format_with_inherited_layouts",
                                          "test_missing_layout_renders_properly"],
                                     "RespondToControllerTest"                                           =>
                                         ["test_html_type_with_layout"],
                                     "ContentNegotiation::TestContentNegotiation"                        =>
                                         ["test_A_*/*_Accept_header_will_return_HTML"],
                                     "RenderAction::RenderActionTest"                                    =>
                                         ["test_rendering_an_action_using_'<action>'",
                                          "test_rendering_an_action_using_'<action>'_and_options",
                                          "test_rendering_an_action_using_:action",
                                          "test_rendering_an_action_using_:action_=>_:hello_world",
                                          "test_rendering_an_action_using_:action_=>_<String>"],
                                     "RenderAction::RenderLayoutTest"                                    =>
                                         ["test_rendering_with_layout_=>_'greetings'",
                                          "test_rendering_with_layout_=>_:nil",
                                          "test_rendering_with_layout_=>_false",
                                          "test_rendering_with_layout_=>_true"],
                                     "RenderActionWithApplicationLayout::LayoutTest"                     =>
                                         ["test_rendering_implicit_application.html.erb_as_layout",
                                          "test_rendering_with_layout_=>_'greetings'",
                                          "test_rendering_with_layout_=>_:nil",
                                          "test_rendering_with_layout_=>_false",
                                          "test_rendering_with_layout_=>_true"],
                                     "RenderActionWithApplicationLayout::TestLayout"                     =>
                                         ["test_builder_works_with_layouts"],
                                     "RenderActionWithControllerLayout::ControllerLayoutTest"            =>
                                         ["test_render_hello_world_and_implicitly_use_<controller_path>.html.erb_as_a_layout.",
                                          "test_rendering_with_layout_=>_:nil",
                                          "test_rendering_with_layout_=>_false",
                                          "test_rendering_with_layout_=>_true"],
                                     "RenderActionWithBothLayouts::ControllerLayoutTest"                 =>
                                         ["test_rendering_implicitly_use_<controller_path>.html.erb_over_application.html.erb_as_a_layout",
                                          "test_rendering_with_layout_=>_:nil",
                                          "test_rendering_with_layout_=>_false",
                                          "test_rendering_with_layout_=>_true"],
                                     "RenderBody::RenderBodyTest"                                        =>
                                         ["test_rendering_body_with_layout:_'greetings'",
                                          "test_rendering_body_with_layout:_true"],
                                     "RenderContext::RenderContextTest"                                  =>
                                         ["test_rendering_using_the_controller_as_context",
                                          "test_rendering_using_the_controller_as_context_with_layout"],
                                     "RenderHtml::RenderHtmlTest"                                        =>
                                         ["test_rendering_text_with_layout:_'greetings'",
                                          "test_rendering_text_with_layout:_true"],
                                     "RenderImplicitAction::RenderImplicitActionTest"                    =>
                                         ["test_available_action?_returns_true_for_implicit_actions",
                                          "test_render_a_simple_action_with_new_explicit_call_to_render",
                                          "test_render_an_action_called_not_implemented",
                                          "test_render_an_action_with_a_missing_method_and_has_special_characters"],
                                     "ControllerLayouts::RenderLayoutTest"                               =>
                                         ["test_overriding_an_implicit_layout_with_render_:layout_option",
                                          "test_rendering_a_normal_template,_but_using_an_implicit_NAMED_layout",
                                          "test_rendering_a_normal_template,_but_using_the_implicit_layout"],
                                     "ControllerLayouts::LayoutOptionsTest"                              =>
                                         ["test_rendering_with_:layout_=>_false_leaves_out_the_implicit_layout"],
                                     "ControllerLayouts::MismatchFormatTest"                             =>
                                         ["test_a_layout_for_JS_is_ignored_even_if_explicitly_provided_for_HTML",
                                          "test_if_XML_is_implicitly_selected,_an_HTML_template_is_not_also_selected",
                                          "test_if_XML_is_selected,_an_HTML_template_is_not_also_selected"],
                                     "ControllerLayouts::FalseLayoutMethodTest"                          =>
                                         ["test_access_false_layout_returned_by_a_method/proc"],
                                     "RenderPartial::TestPartial"                                        =>
                                         ["test_rendering_a_partial_in_ActionView_doesn't_pull_the_ivars_again_from_the_controller",
                                          "test_rendering_a_template_with_renders_another_partial_with_other_format_that_renders_other_partial_in_the_same_format"],
                                     "RenderPartial::TestInheritedPartial"                               =>
                                         ["test_partial_from_child_controller_gets_picked",
                                          "test_partial_from_parent_controller_gets_picked_if_missing_in_child_one"],
                                     "RenderPlain::RenderPlainTest"                                      =>
                                         ["test_rendering_text_with_layout:_'greetings'",
                                          "test_rendering_text_with_layout:_true"],
                                     "RenderStreaming::StreamingTest"                                    =>
                                         ["test_do_not_stream_on_HTTP/1.0",
                                          "test_rendering_with_layout_exception",
                                          "test_rendering_with_streaming_do_not_override_explicit_cache_control_given_to_render",
                                          "test_rendering_with_streaming_enabled_at_the_class_level",
                                          "test_rendering_with_streaming_given_to_render",
                                          "test_rendering_with_streaming_no_layout",
                                          "test_rendering_with_template_exception",
                                          "test_rendering_with_template_exception_logs_the_exception",
                                          "test_skip_rendering_with_streaming_at_render_level"],
                                     "RenderTemplate::TestWithoutLayout"                                 =>
                                         ["test_rendering_a_builder_template",
                                          "test_rendering_a_normal_template_with_full_path_without_layout",
                                          "test_rendering_a_normal_template_with_full_path_without_layout_without_key",
                                          "test_rendering_a_template_not_in_a_subdirectory",
                                          "test_rendering_a_template_not_in_a_subdirectory_with_a_leading_slash",
                                          "test_rendering_a_template_not_in_a_subdirectory_with_a_leading_slash_without_key",
                                          "test_rendering_a_template_with_<%=raw_stuff_%>",
                                          "test_rendering_a_template_with_error_properly_excerts_the_code",
                                          "test_rendering_a_template_with_local_variables",
                                          "test_rendering_a_template_with_local_variables_without_key",
                                          "test_rendering_a_template_with_renders_another_template_with_other_format_that_renders_other_template_in_the_same_format"],
                                     "RenderTemplate::TestWithLayout"                                    =>
                                         ["test_rendering_layout_=>_'greetings'",
                                          "test_rendering_with_implicit_layout",
                                          "test_rendering_with_layout_=>_:false",
                                          "test_rendering_with_layout_=>_:nil",
                                          "test_rendering_with_layout_=>_:true"],
                                     "RenderTemplate::Compatibility::TestTemplateRenderWithForwardSlash" =>
                                         ["test_rendering_a_normal_template_with_full_path_starting_with_a_leading_slash"],
                                     "Render::RenderTest"                                                =>
                                         ["test_render_with_blank"],
                                     "Render::TestOnlyRenderPublicActions"                               =>
                                         ["test_raises_an_exception_when_a_method_of_Object_is_called",
                                          "test_raises_an_exception_when_a_private_method_is_called"],
                                     "Render::TestVariousObjectsAvailableInView"                         =>
                                         ["test_The_action_name_is_accessible_in_the_view",
                                          "test_The_controller_name_is_accessible_in_the_view",
                                          "test_The_request_object_is_accessible_in_the_view"],
                                     "Render::TestViewInheritance"                                       =>
                                         ["test_Template_from_child_controller_gets_picked_over_parent_one",
                                          "test_Template_from_child_controller_with_custom_view_paths_appended_gets_picked_over_parent_one",
                                          "test_Template_from_child_controller_with_custom_view_paths_prepended_gets_picked_over_parent_one",
                                          "test_Template_from_parent_controller_gets_picked_if_missing_in_child_controller"],
                                     "RenderText::RenderTextTest"                                        =>
                                         ["test_rendering_text_with_layout:_'greetings'",
                                          "test_rendering_text_with_layout:_true"],
                                     "CookiesTest"                                                       =>
                                         ["test_encrypted_cookie_using_custom_digest",
                                          "test_legacy_json_signed_cookie_is_read_and_transparently_upgraded_by_signed_json_cookie_jar_if_both_secret_token_and_secret_key_base_are_set",
                                          "test_legacy_json_signed_cookie_is_read_and_transparently_upgraded_by_signed_json_hybrid_jar_if_both_secret_token_and_secret_key_base_are_set",
                                          "test_legacy_signed_cookie_is_read_and_transparently_upgraded_by_signed_cookie_jar_if_both_secret_token_and_secret_key_base_are_set"],
                                     "DebugExceptionsTest"                                               =>
                                         ["test_debug_exceptions_app_shows_user_code_that_caused_the_error_in_source_view",
                                          "test_display_backtrace_on_template_missing_errors",
                                          "test_display_backtrace_when_error_type_is_SyntaxError",
                                          "test_display_backtrace_when_error_type_is_SyntaxError_wrapped_by_ActionView::Template::Error",
                                          "test_displays_request_and_response_info_when_a_RoutingError_occurs",
                                          "test_rescue_with_diagnostics_message",
                                          "test_rescue_with_text_error_for_xhr_request",
                                          "test_show_registered_original_exception_for_wrapped_exceptions"],
                                     "TestGenerationPrefix::WithMountedEngine"                           =>
                                         ["test_[ENGINE]_absolute_path_redirect_doesn't_use_SCRIPT_NAME_from_request",
                                          "test_[ENGINE]_absolute_path_root_doesn't_use_SCRIPT_NAME_from_request",
                                          "test_[ENGINE]_relative_path_redirect_uses_SCRIPT_NAME_from_request"],
                                     "TestRoutingMapper"                                                 =>
                                         ["test_redirect_modulo"],
                                     "TestRedirectInterpolation"                                         =>
                                         ["test_path_redirect_escapes_interpolated_parameters_correctly",
                                          "test_redirect_escapes_interpolated_parameters_with_redirect_proc"],
                                     "TestGlobRoutingMapper"                                             =>
                                         ["test_glob_constraint"],
                                     "QueryStringParsingTest"                                            =>
                                         ["test_query_string_with_many_ampersands"],
                                     "CookieStoreTest"                                                   =>
                                         ["test_deserializes_unloaded_classes_on_get_id",
                                          "test_deserializes_unloaded_classes_on_get_value"] }

                        require 'truffle/exclude_rspec_examples'

                        Truffle.exclude_rspec_examples blocking.merge(failures)

  :without:
    - db
    - job
:run:
  :require:
    - rubygems
    - date
    - bigdecimal
    - pathname
    - openssl-stubs
