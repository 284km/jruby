<?xml version="1.0"?>
<project
    xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>jruby-core</artifactId>
  <groupId>org.jruby</groupId>
  <version>1.7.5.dev</version>
  <packaging>jar</packaging>
  <name>JRuby Core</name>

  <repositories>
    <repository>
      <id>localrepo</id>
      <url>file:./localrepo</url>
    </repository>
  </repositories>

  <scm>
    <connection>scm:git:git://github.com/jruby/jruby.git</connection>
    <developerConnection>scm:git:git://github.com/jruby/jruby.git</developerConnection>
    <url>http://github.com/jruby/jruby</url>
  </scm>

  <dependencies>
    <!--dependency>
      <groupId>org.jruby</groupId>
      <artifactId>jruby-stdlib</artifactId>
      <version>${project.version}</version>
    </dependency-->
    <!-- JRuby dependencies included in the jar and *not* rewritten. -->
    <dependency>
      <groupId>org.jruby.joni</groupId>
      <artifactId>joni</artifactId>
      <version>2.0.0</version>
    </dependency>
    <dependency>
      <groupId>com.github.jnr</groupId>
      <artifactId>jnr-netdb</artifactId>
      <version>1.1.2</version>
    </dependency>
    <dependency>
      <groupId>com.github.jnr</groupId>
      <artifactId>jnr-enxio</artifactId>
      <version>0.4</version>
    </dependency>
    <dependency>
      <groupId>com.github.jnr</groupId>
      <artifactId>jnr-unixsocket</artifactId>
      <version>0.3</version>
    </dependency>
    <dependency>
      <groupId>com.github.jnr</groupId>
      <artifactId>jnr-posix</artifactId>
      <version>3.0.0</version>
    </dependency>
    <dependency>
      <groupId>org.jruby.extras</groupId>
      <artifactId>bytelist</artifactId>
      <version>1.0.10</version>
    </dependency>
    <dependency>
      <groupId>com.github.jnr</groupId>
      <artifactId>jnr-constants</artifactId>
      <version>0.8.4</version>
    </dependency>
    <dependency>
      <groupId>org.jruby.jcodings</groupId>
      <artifactId>jcodings</artifactId>
      <version>1.0.10</version>
    </dependency>
    <dependency>
      <groupId>com.github.jnr</groupId>
      <artifactId>jffi</artifactId>
      <version>1.2.5</version>
    </dependency>
    <dependency>
      <groupId>org.yaml</groupId>
      <artifactId>snakeyaml</artifactId>
      <version>1.11</version>
    </dependency>
    <dependency>
      <groupId>jline</groupId>
      <artifactId>jline</artifactId>
      <version>2.7</version>
    </dependency>
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>2.1</version>
    </dependency>
    <dependency>
      <groupId>com.jcraft</groupId>
      <artifactId>jzlib</artifactId>
      <version>1.1.2</version>
    </dependency>
    <dependency>
      <groupId>com.headius</groupId>
      <artifactId>invokebinder</artifactId>
      <version>1.2</version>
    </dependency>

    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcpkix-jdk15on</artifactId>
      <version>1.47</version>
    </dependency>
    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcprov-jdk15on</artifactId>
      <version>1.47</version>
    </dependency>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.core</artifactId>
      <version>4.3.1</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.ant</groupId>
      <artifactId>ant</artifactId>
      <version>1.8.4</version>
      <scope>provided</scope>
    </dependency>

    <!-- localrepo jars -->
    <dependency>
      <groupId>jay</groupId>
      <artifactId>yydebug</artifactId>
      <version>1.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.bsf</groupId>
      <artifactId>bsf</artifactId>
      <version>1.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>nailgun</groupId>
      <artifactId>nailgun</artifactId>
      <version>0.7.1</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>coro</groupId>
      <artifactId>coro-mock</artifactId>
      <version>1.0-SNAPSHOT</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>sun.misc</groupId>
      <artifactId>unsafe-mock</artifactId>
      <version>1.0-SNAPSHOT</version>
      <scope>provided</scope>
    </dependency>

    <!-- to use this explicitly allows to exclude the asm deps
    which are repacked inside jruby-core itself -->
    <dependency>
      <groupId>com.github.jnr</groupId>
      <artifactId>jnr-ffi</artifactId>
      <version>1.0.4</version>
      <!--exclusions>
	<exclusion>
	  <groupId>org.ow2.asm</groupId>
	  <artifactId>asm-util</artifactId>
	</exclusion>
	<exclusion>
	  <groupId>org.ow2.asm</groupId>
	  <artifactId>asm-analysis</artifactId>
	</exclusion>
	<exclusion>
	  <groupId>org.ow2.asm</groupId>
	  <artifactId>asm-commons</artifactId>
	</exclusion>
	<exclusion>
	  <groupId>org.ow2.asm</groupId>
	  <artifactId>asm-tree</artifactId>
	</exclusion>
	<exclusion>
	  <groupId>org.ow2.asm</groupId>
	  <artifactId>asm</artifactId>
	</exclusion>
      </exclusions-->
    </dependency>
  </dependencies>

  <build>
    <sourceDirectory>src</sourceDirectory>
    <outputDirectory>build/classes/jruby</outputDirectory>
    <resources>
      <resource>
        <directory>src</directory>
        <includes>
          <include>**/*.rb</include>
        </includes>
      </resource>
      <resource>
        <targetPath>${tzdata.build.directory}</targetPath>
        <directory>${project.basedir}/resources</directory>
        <includes>
          <include>.empty</include>
        </includes>
      </resource>
      <resource>
        <targetPath>${generated.sources}</targetPath>
        <filtering>true</filtering>
        <directory>${project.basedir}/resources</directory>
        <includes>
          <include>${Constants.java}</include>
        </includes>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.8</version>
        <executions>
          <execution>
            <id>add-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${generated.sources}</source>
              </sources>
            </configuration>
          </execution>
          <execution>
            <id>add-populators</id>
            <phase>process-classes</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>build/src_gen</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <version>1.0-alpha-2</version>
        <executions>
          <execution>
            <phase>initialize</phase>
            <goals>
              <goal>read-project-properties</goal>
            </goals>
            <configuration>
              <quiet>true</quiet>
              <files>
                <file>${basedir}/default.build.properties</file>
                <file>${basedir}/build.properties</file>
              </files>
            </configuration>
          </execution>
        </executions>
      </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.2.1</version>
            <executions>
              <execution>
                <id>invoker-generator</id>
                <phase>process-classes</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
              <configuration>
                <executable>java</executable>
                <arguments>
                  <argument>-Djruby.bytecode.version=${javac.version}</argument>
                  <argument>-classpath</argument>
                  <classpath/>
                  <argument>org.jruby.anno.InvokerGenerator</argument>
                  <argument>build/src_gen/annotated_classes.txt</argument>
                  <argument>${project.build.outputDirectory}</argument>
                </arguments>
              </configuration>
              </execution>
            </executions>
          </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
        <version>1.2</version>
        <configuration>
          <shortRevisionLength>7</shortRevisionLength>
          <buildNumberPropertyName>jruby.revision</buildNumberPropertyName>
        </configuration>
        <executions>
          <execution>
            <phase>process-sources</phase>
            <goals>
              <goal>create</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <encoding>utf-8</encoding>
          <debug>true</debug>
          <verbose>true</verbose>
          <fork>true</fork>
          <showWarnings>true</showWarnings>
          <showDeprecation>true</showDeprecation>
          <source>${javac.version}</source>
          <target>${javac.version}</target>
        </configuration>
        <executions>
          <execution>
            <id>anno</id>
            <phase>process-resources</phase>
            <goals><goal>compile</goal></goals>
            <configuration>
              <includes>
                <include>org/jruby/anno/FrameField.java</include>
                <include>org/jruby/anno/AnnotationBinder.java</include>
                <include>org/jruby/anno/JRubyMethod.java</include>
                <include>org/jruby/anno/FrameField.java</include>
                <include>org/jruby/CompatVersion.java</include>
                <include>org/jruby/runtime/Visibility.java</include>
                <include>org/jruby/util/CodegenUtils.java</include>
                <include>org/jruby/util/SafePropertyAccessor.java</include>
              </includes>
            </configuration>
          </execution>
          <execution>
            <id>populators</id>
            <phase>process-classes</phase>
            <goals><goal>compile</goal></goals>
            <configuration>
              <includes>
                <include>org/jruby/gen/**/*java</include>
              </includes>
            </configuration>
          </execution>
          <execution>
            <id>constants</id>
            <phase>process-resources</phase>
            <goals><goal>compile</goal></goals>
            <configuration>
              <includes>
                <include>${Constants.java}</include>
              </includes>
            </configuration>
          </execution>
          <execution>
            <id>default-compile</id>
            <phase>compile</phase>
            <configuration>
              <annotationProcessors>
                <annotationProcessor>org.jruby.anno.AnnotationBinder</annotationProcessor>
              </annotationProcessors>
              <compilerArgs>
                <arg>-XDignore.symbol.file=true</arg>
                <arg>-J-Duser.language=en</arg>
                <arg>-J-Dfile.encoding=UTF-8</arg>
                <arg>-J-Xbootclasspath/p:${project.build.directory}/${unsafe.jar}</arg>
              </compilerArgs>
              <excludes>
                <exclude>${Constants.java}</exclude>
              </excludes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.8</version>
        <executions>
          <execution>
            <id>unsafe</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>sun.misc</groupId>
                  <artifactId>unsafe-mock</artifactId>
                  <version>1.0-SNAPSHOT</version>
                  <type>jar</type>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}</outputDirectory>
                  <destFileName>${unsafe.jar}</destFileName>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>2.5</version>
        <executions>
          <execution>
            <id>auto-clean</id>
            <phase>process-classes</phase>
            <goals>
              <goal>clean</goal>
            </goals>
            <configuration>
              <excludeDefaultDirectories>true</excludeDefaultDirectories>
              <filesets>
                <fileset>
                  <directory>build/src_gen</directory>
                  <includes>
                    <include>annotated_classes.txt</include>
                  </includes>
                </fileset>
              </filesets>
              <failOnError>false</failOnError>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <properties>
    <generated.sources>${project.build.directory}/generated-sources</generated.sources>
    <unsafe.jar>unsafe.jar</unsafe.jar>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.build.timestamp.format>yyyy-MM-dd</maven.build.timestamp.format>
    <build.date>${maven.build.timestamp}</build.date>
    <tzdata.tar.gz>${project.build.directory}/tzdata.tar.gz</tzdata.tar.gz>
    <tzdata.build.directory>${project.build.directory}/tzdata/build/org/joda/time/tz/data</tzdata.build.directory>
    <Constants.java>org/jruby/runtime/Constants.java</Constants.java>
  </properties>

  <profiles>
    <profile>
      <id>tzdata</id>
      <!--activation>
        <file>
          <missing>target/tzdata.tar.gz</missing>
        </file>
      </activation-->
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>wagon-maven-plugin</artifactId>
            <version>1.0-beta-3</version>
            <executions>
              <execution>
                <id>tzdata</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>download-single</goal>
                </goals>
                <configuration>
                  <url>ftp://anonymous:jruby%40jruby.org@${tzdata.ftpserver}</url>
                  <fromFile>${tzdata.ftp.dir}/tzdata${tzdata.latest.version}.tar.gz</fromFile>
                  <toFile>${tzdata.tar.gz}</toFile>
                </configuration>
              </execution>
            </executions>
            <dependencies>
              <dependency>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ftp</artifactId>
                <version>2.4</version>
              </dependency>
            </dependencies>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>truezip-maven-plugin</artifactId>
            <version>1.1</version>
            <executions>
              <execution>
                <id>copy-out-fileset</id>
                <goals>
                  <goal>copy</goal>
                </goals>
                <phase>generate-sources</phase>
                <configuration>
                  <fileset>
                    <directory>${tzdata.tar.gz}</directory>
                    <outputDirectory>${project.build.directory}/tzdata</outputDirectory>
                  </fileset>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.2.1</version>
            <executions>
              <execution>
                <id>tzdata</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>java</goal>
                </goals>
              <configuration>
                <mainClass>org.joda.time.tz.ZoneInfoCompiler</mainClass>
                <arguments>
                  <argument>-src</argument>
                  <argument>${project.build.directory}/tzdata</argument>
                  <argument>-dst</argument>
                  <argument>${project.build.directory}/tzdata/build</argument>
                  <argument>africa</argument>
                </arguments>
                <systemProperties>
                  <systemProperty>
                    <key>org.joda.time.DateTimeZone.Provider</key>
                    <value>org.joda.time.tz.UTCProvider</value>
                  </systemProperty>
                </systemProperties>
              </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
